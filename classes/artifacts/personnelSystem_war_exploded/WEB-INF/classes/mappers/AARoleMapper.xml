<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personnelSystem.mapper.AARoleMapper">
  <resultMap id="BaseResultMap" type="com.personnelSystem.entity.AARole">
    <id column="aaRole_ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="aaRole_ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="aaRole_ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="aaRole_ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="aaRole_DELETED" jdbcType="INTEGER" property="deleted" />
    <result column="aaRole_CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="aaRole_UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="aaRole_CREATED_BY" jdbcType="INTEGER" property="createdBy" />
    <result column="aaRole_UPDATED_BY" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aaRole.ROLE_ID as aaRole_ROLE_ID, aaRole.ROLE_CODE as aaRole_ROLE_CODE, aaRole.ROLE_NAME as aaRole_ROLE_NAME, 
    aaRole.ROLE_DESC as aaRole_ROLE_DESC, aaRole.DELETED as aaRole_DELETED, aaRole.CREATED_TIME as aaRole_CREATED_TIME, 
    aaRole.UPDATED_TIME as aaRole_UPDATED_TIME, aaRole.CREATED_BY as aaRole_CREATED_BY, 
    aaRole.UPDATED_BY as aaRole_UPDATED_BY
  </sql>
  <select id="selectByExample" parameterType="com.personnelSystem.entity.AARoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aa_role aaRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aa_role aaRole
    where aaRole.ROLE_ID = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aa_role
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.personnelSystem.entity.AARoleExample">
    delete from aa_role aaRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personnelSystem.entity.AARole">
    insert into aa_role (ROLE_ID, ROLE_CODE, ROLE_NAME, 
      ROLE_DESC, DELETED, CREATED_TIME, 
      UPDATED_TIME, CREATED_BY, UPDATED_BY
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleDesc,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.personnelSystem.entity.AARole">
    insert into aa_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleCode != null">
        ROLE_CODE,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.personnelSystem.entity.AARoleExample" resultType="java.lang.Long">
    select count(*) from aa_role aaRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aa_role aaRole
    <set>
      <if test="record.roleId != null">
        aaRole.ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleCode != null">
        aaRole.ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null">
        aaRole.ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null">
        aaRole.ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        aaRole.DELETED = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        aaRole.CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        aaRole.UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        aaRole.CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null">
        aaRole.UPDATED_BY = #{record.updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aa_role aaRole
    set aaRole.ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      aaRole.ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      aaRole.ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      aaRole.ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      aaRole.DELETED = #{record.deleted,jdbcType=INTEGER},
      aaRole.CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      aaRole.UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      aaRole.CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      aaRole.UPDATED_BY = #{record.updatedBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.personnelSystem.entity.AARole">
    update aa_role
    <set>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personnelSystem.entity.AARole">
    update aa_role
    set ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      DELETED = #{deleted,jdbcType=INTEGER},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      CREATED_BY = #{createdBy,jdbcType=INTEGER},
      UPDATED_BY = #{updatedBy,jdbcType=INTEGER}
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>