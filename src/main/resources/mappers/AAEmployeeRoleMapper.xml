<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personnelSystem.mapper.AAEmployeeRoleMapper">
  <resultMap id="BaseResultMap" type="com.personnelSystem.entity.AAEmployeeRole">
    <id column="aaEmployeeRole_EMPLOYEE_ID" jdbcType="INTEGER" property="employeeId" />
    <id column="aaEmployeeRole_ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="aaEmployeeRole_CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="aaEmployeeRole_CREATED_BY" jdbcType="INTEGER" property="createdBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aaEmployeeRole.EMPLOYEE_ID as aaEmployeeRole_EMPLOYEE_ID, aaEmployeeRole.ROLE_ID as aaEmployeeRole_ROLE_ID, 
    aaEmployeeRole.CREATED_TIME as aaEmployeeRole_CREATED_TIME, aaEmployeeRole.CREATED_BY as aaEmployeeRole_CREATED_BY
  </sql>
  <select id="selectByExample" parameterType="com.personnelSystem.entity.AAEmployeeRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aa_employee_role aaEmployeeRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.personnelSystem.entity.AAEmployeeRoleKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aa_employee_role aaEmployeeRole
    where aaEmployeeRole.EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
      and aaEmployeeRole.ROLE_ID = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.personnelSystem.entity.AAEmployeeRoleKey">
    delete from aa_employee_role
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
      and ROLE_ID = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.personnelSystem.entity.AAEmployeeRoleExample">
    delete from aa_employee_role aaEmployeeRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personnelSystem.entity.AAEmployeeRole">
    insert into aa_employee_role (EMPLOYEE_ID, ROLE_ID, CREATED_TIME, 
      CREATED_BY)
    values (#{employeeId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.personnelSystem.entity.AAEmployeeRole">
    insert into aa_employee_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.personnelSystem.entity.AAEmployeeRoleExample" resultType="java.lang.Long">
    select count(*) from aa_employee_role aaEmployeeRole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aa_employee_role aaEmployeeRole
    <set>
      <if test="record.employeeId != null">
        aaEmployeeRole.EMPLOYEE_ID = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        aaEmployeeRole.ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        aaEmployeeRole.CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        aaEmployeeRole.CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aa_employee_role aaEmployeeRole
    set aaEmployeeRole.EMPLOYEE_ID = #{record.employeeId,jdbcType=INTEGER},
      aaEmployeeRole.ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      aaEmployeeRole.CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      aaEmployeeRole.CREATED_BY = #{record.createdBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.personnelSystem.entity.AAEmployeeRole">
    update aa_employee_role
    <set>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=INTEGER},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
      and ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personnelSystem.entity.AAEmployeeRole">
    update aa_employee_role
    set CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      CREATED_BY = #{createdBy,jdbcType=INTEGER}
    where EMPLOYEE_ID = #{employeeId,jdbcType=INTEGER}
      and ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>