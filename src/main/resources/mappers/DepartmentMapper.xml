<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personnelSystem.mapper.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.personnelSystem.entity.Department">
    <id column="department_id" jdbcType="INTEGER" property="id" />
    <result column="department_departmentName" jdbcType="VARCHAR" property="departmentname" />
    <result column="department_mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="department_createdById" jdbcType="INTEGER" property="createdbyid" />
    <result column="department_createdTime" jdbcType="TIMESTAMP" property="createdtime" />
    <result column="department_modifyById" jdbcType="INTEGER" property="modifybyid" />
    <result column="department_modifyDateTime" jdbcType="TIMESTAMP" property="modifydatetime" />
    <result column="department_version" jdbcType="BIT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    department.id as department_id, department.departmentName as department_departmentName, 
    department.mobile as department_mobile, department.createdById as department_createdById, 
    department.createdTime as department_createdTime, department.modifyById as department_modifyById, 
    department.modifyDateTime as department_modifyDateTime, department.version as department_version
  </sql>
  <select id="selectByExample" parameterType="com.personnelSystem.entity.DepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department department
    where department.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.personnelSystem.entity.DepartmentExample">
    delete from department department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personnelSystem.entity.Department">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department (departmentName, mobile, createdById, 
      createdTime, modifyById, modifyDateTime, 
      version)
    values (#{departmentname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{createdbyid,jdbcType=INTEGER}, 
      #{createdtime,jdbcType=TIMESTAMP}, #{modifybyid,jdbcType=INTEGER}, #{modifydatetime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.personnelSystem.entity.Department">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentname != null">
        departmentName,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="createdbyid != null">
        createdById,
      </if>
      <if test="createdtime != null">
        createdTime,
      </if>
      <if test="modifybyid != null">
        modifyById,
      </if>
      <if test="modifydatetime != null">
        modifyDateTime,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentname != null">
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createdbyid != null">
        #{createdbyid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifybyid != null">
        #{modifybyid,jdbcType=INTEGER},
      </if>
      <if test="modifydatetime != null">
        #{modifydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.personnelSystem.entity.DepartmentExample" resultType="java.lang.Long">
    select count(*) from department department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update department department
    <set>
      <if test="record.id != null">
        department.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.departmentname != null">
        department.departmentName = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        department.mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.createdbyid != null">
        department.createdById = #{record.createdbyid,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null">
        department.createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifybyid != null">
        department.modifyById = #{record.modifybyid,jdbcType=INTEGER},
      </if>
      <if test="record.modifydatetime != null">
        department.modifyDateTime = #{record.modifydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        department.version = #{record.version,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update department department
    set department.id = #{record.id,jdbcType=INTEGER},
      department.departmentName = #{record.departmentname,jdbcType=VARCHAR},
      department.mobile = #{record.mobile,jdbcType=VARCHAR},
      department.createdById = #{record.createdbyid,jdbcType=INTEGER},
      department.createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
      department.modifyById = #{record.modifybyid,jdbcType=INTEGER},
      department.modifyDateTime = #{record.modifydatetime,jdbcType=TIMESTAMP},
      department.version = #{record.version,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.personnelSystem.entity.Department">
    update department
    <set>
      <if test="departmentname != null">
        departmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createdbyid != null">
        createdById = #{createdbyid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        createdTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifybyid != null">
        modifyById = #{modifybyid,jdbcType=INTEGER},
      </if>
      <if test="modifydatetime != null">
        modifyDateTime = #{modifydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personnelSystem.entity.Department">
    update department
    set departmentName = #{departmentname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      createdById = #{createdbyid,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=TIMESTAMP},
      modifyById = #{modifybyid,jdbcType=INTEGER},
      modifyDateTime = #{modifydatetime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <sql id="listDepartment_Where_Clause">
		<trim prefix="where" prefixOverrides="AND">
		department.version = 0
			<if test="departmentName != null and departmentName != ''">
				and lower(IFNULL(department.departmentName,'')) LIKE CONCAT(CONCAT('%',
				TRIM(lower(#{departmentName, jdbcType=VARCHAR}))), '%')
			</if>
			<if test="mobile != null and mobile != ''">
				and lower(IFNULL(department.mobile,'')) LIKE CONCAT(CONCAT('%',
				TRIM(lower(#{mobile, jdbcType=VARCHAR}))), '%')
			</if>
		</trim>
	</sql>
    <select id="countDepartment" parameterType="com.personnelSystem.dto.criteria.SearchDepartmentCriteria" resultType="int">
     	select 
	        count(1)
		FROM
		  	department
		<if test="_parameter != null">
            <include refid="listDepartment_Where_Clause" />
        </if>
    </select>
    <select id="selectByCriteria" parameterType="com.personnelSystem.dto.criteria.SearchDepartmentCriteria" resultMap="BaseResultMap">
		select 
		  <include refid="Base_Column_List" />
		FROM
		   department
        <if test="_parameter != null">
            <include refid="listDepartment_Where_Clause" />
        </if>
        ORDER BY department.createdTime DESC
        <if test="pagesize != 0">
            LIMIT #{offset}, #{pagesize}
        </if>
    </select>
</mapper>